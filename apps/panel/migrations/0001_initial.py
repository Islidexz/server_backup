# Generated by Django 5.0 on 2024-04-08 21:57

import apps.panel.utils
import django.core.files.storage
import django.core.validators
import django.db.models.deletion
import tinymce.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('alt', models.CharField(blank=True, max_length=255, null=True)),
                ('file', models.FileField(storage=django.core.files.storage.FileSystemStorage(location='C:\\Users\\User\\Desktop\\Nest\\DEV\\media\\files'), upload_to=apps.panel.utils.upload_to, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'svg', 'pdf', 'doc', 'docx', 'xls', 'xlsx', 'ppt', 'pptx'])])),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SEOData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, help_text='SEO title', max_length=255, null=True)),
                ('description', models.TextField(blank=True, help_text='Meta description for SEO', null=True)),
                ('keywords', models.CharField(blank=True, help_text='Comma-separated keywords for SEO', max_length=255, null=True)),
                ('slug', models.SlugField(blank=True, help_text='SEO-friendly URL', max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('value', models.TextField()),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, default='Untitled', max_length=255, null=True)),
                ('text', tinymce.models.HTMLField(blank=True, null=True)),
                ('url', models.CharField(blank=True, default='new-page', max_length=255, null=True, unique=True)),
                ('state', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=10)),
                ('type', models.CharField(choices=[('cat', 'Category'), ('page', 'Page'), ('tpl', 'Template'), ('price', 'Price'), ('addsome', 'addsome')], default='cat', max_length=10)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='panel.page')),
            ],
        ),
        migrations.CreateModel(
            name='Set',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('items_object_id', models.PositiveIntegerField()),
                ('order', models.JSONField(blank=True, null=True)),
                ('items_content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='Slice',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_main', models.BooleanField(default=False)),
                ('state', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=10)),
                ('price', models.FloatField(blank=True, null=True)),
                ('title', models.CharField(max_length=255)),
                ('text', tinymce.models.HTMLField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('keywords_block', models.TextField(blank=True, null=True)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='C:\\Users\\User\\Desktop\\Nest\\DEV\\media/icons/')),
                ('img', models.ImageField(blank=True, null=True, upload_to='C:\\Users\\User\\Desktop\\Nest\\DEV\\media/images/')),
                ('parent_page', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='slices', to='panel.page')),
            ],
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('parent_object_id', models.PositiveIntegerField()),
                ('order', models.PositiveIntegerField()),
                ('parent_content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='TextContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('text', tinymce.models.HTMLField(blank=True, null=True)),
                ('keywords_block', models.TextField(blank=True, null=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='Website',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('url', models.URLField(blank=True, null=True, unique=True)),
                ('state', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=10)),
                ('type', models.CharField(choices=[('personal', 'Personal'), ('business', 'Business')], default='personal', max_length=10)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='websites', to=settings.AUTH_USER_MODEL, verbose_name='Website Owner')),
            ],
        ),
        migrations.AddField(
            model_name='page',
            name='parent_ws',
            field=models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pages', to='panel.website'),
        ),
        migrations.AddIndex(
            model_name='page',
            index=models.Index(fields=['url', 'parent'], name='panel_page_url_ee927a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='page',
            unique_together={('url', 'parent'), ('url', 'parent_ws')},
        ),
    ]
